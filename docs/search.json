[{"path":"index.html","id":"über-das-buch","chapter":"Über das Buch","heading":"Über das Buch","text":"Die Motivation für dieses Buch kam aus der Erkenntnis, dass viele kleine und mittelgrosse Unternehmen (KMU) der Schweiz zwar über grosse Datenmengen verfügen, aber nicht das nötige Knowhow haben, um die Daten zu analysieren und für die Optimierung von Entscheidungsprozessen zu nutzen. Mit diesem Buch möchte ich einen kleinen Beitrag leisten, den Knowhow Transfer von Fachhochschulen die Unternehmen zu katalysieren.Das Buch versucht, sowohl die klassischen Machine Learning Methoden als auch neueste Entwicklungen im Deep Learning mit einem Fokus auf die Anwendung zu vermitteln. Deep Learning kann als eine Teilmenge des Machine Learnings gesehen werden. Das heisst, jede Deep Learning Methode ist automatisch auch eine Machine Learning Methode. Machine Learning entält jedoch weitere Methoden, welche nicht dem Deep Learning zugeordnet werden können. Das Gebiet Machine Learning ist wiederum eine Teilmenge der Methoden der Künstlichen Intelligenz. Letztere enthält weitere Methoden, welche nicht dem Machine Learning zuzuordnen sind. Abbildung 0.1 versucht diesen Sachverhalt schematisch darzustellen.\nAbbildung 0.1: Unterscheidung zwischen KI, ML und DL.\nWir werden im ganzen Buch die folgenden (üblichen) Abkürzungen verwenden:Künstliche Intelligenz = KI (oft spricht man auch von AI, die Abkürzung für den englischen Begriff Artificial Intelligence ist).Machine Learning = MLDeep Learning = DLObwohl das Buch einen anwendungsorientierten Ansatz verfolgt, soll die mathematisch-statistische Intuition hinter den beschriebenen Modellen und Methoden nicht zu kurz kommen. Diese Intuition ist aus meiner Sicht zwingend, um beurteilen zu können, ob sich ein Modell überhaupt für ein gegebenes Problem eignet. Schluss geht es nämlich darum, dass wir mit dem Einsatz von Machine Learning einen Mehrwert für ein Unternehmen oder für die Gesellschaft schaffen können. Das erfordert, dass wir uns eingehend und kritisch mit den Modellen und deren Eignung für ein gegebenes Problem auseinander setzen.","code":""},{"path":"index.html","id":"zielgruppe","chapter":"Über das Buch","heading":"Zielgruppe","text":"Das Buch richtet sich insbesondere Fachhochschulstudierende der deutschsprachigen Schweiz mit einem intrinsischen Interesse quantitativen Methoden im Allgemeinen und Machine Learning im Besonderen. Vorausgesetzt werden Mathematikkenntnisse auf Stufe Mittelschule (Berufs- oder gymnasiale Matur), d.h. Sie sollten vertraut sein mit den Grundlagen bezüglich mathematischer Funktionen, der Integral- und Differentialrechnung sowie den wichtigsten Resultaten aus der Algebra. Ausserdem gehe ich davon aus, dass Sie bereits eine Einführung das Thema Statistik besucht haben und Konzepte aus der deskriptiven Statistik (Mittelwert, Median, Varianz, Quantile, etc.) sowie aus der Inferenzstatistik (Verteilungen, statistisches Testen, etc.) bekannt sind.Bevor Sie sich aber nun Sorgen machen: Kapitel 2 enthält eine Einführung die wichtigsten Mathematik- und Statistikgrundlagen, die nötig sind für das Verständnis von Machine Learning Modellen.Da ich mit diesem Buch einen anwendungsorientierten Ansatz verfolge, werden wir auch das Programmieren einsteigen. Dazu verwenden wir diesem Buch die Programmiersprache R. Es werden keine Vorkenntnisse vorausgesetzt. Kapitel 3 enthält eine kurze Einführung die Programmiersprache R und verweist Sie auf weiterführende Ressourcen zum Thema Programmieren. Jedes Modell, das wir uns anschauen werden, ist mit R-Code dokumentiert, dass Sie lernen, wie die Modelle der Praxis angewendet werden können.","code":""},{"path":"index.html","id":"aufbau-des-buchs","chapter":"Über das Buch","heading":"Aufbau des Buchs","text":"Das Buch enthält folgende Kapitel:Kapitel 1: Einführung das Thema Machine Learning mit Definitionen sowie Anwendungsbeispielen.Kapitel 2: Wichtigste Mathematik- und Statistikgrundlagen, die für das Verständnis der Modelle den späteren Kapitel elementar sind.Kapitel 3: Einführung das Programmieren mit R sowie Überblick über die wichtigsten R-Packages, die wir verwenden werden.Kapitel 4: Hier erlernen wir die Grundmodelle, um Regressionsprobleme zu lösen. Es sind lineare Modelle, bedeutet, dass die funktionale Form der Modelle linear von den Parametern des Modells abhängen. Grafisch bedeutet dies, dass ein solches Modell im einfachsten Fall durch eine Gerade beschrieben werden kann.Kapitel 5: diesem Kapitel lernen wir die Grundmodelle für das Klassifikationsproblem kennen. Diese Modelle führen typischerweise zu einer linearen Entscheidungsgrenze (engl. Decision Boundary) zwischen den verschiedenen Klassen, die wir unterscheiden oder klassifizieren wollen.Kapitel 6: Damit wir ML der Praxis anwenden können, lernen wir hier die typische ML-Pipeline kennen. Sie werden die Techniken und Methoden kennen lernen, die es braucht, um überhaupt erst den Punkt zu kommen, um ein ML-Modell rechnen zu können. Oft werden diese Techniken und Methoden unter dem Begriff Preprocessing der Daten zusammengefasst. Doch die Pipeline endet nicht mit dem Rechnen eines ML-Modells. Danach muss ein Modell evaluiert werden und wenn Sie als Analyst*zufrieden sind, müssen Sie sich Gedanken machen, wie das Deployment des Modells aussehen soll. Das heisst, wie kann Ihr Modell Dritten zur Verfügung gestellt werden? Wir werden uns hier auch kurz mit den wichtigsten Techniken aus dem Unsupervised Learning befassen.Kapitel 7: Nach den ersten linearen Modellen für das Regressions- und Klassifikationsproblem lernen wir hier ein flexibleres Modell kennen, nämlich den Entscheidungsbaum (engl. Decision Tree). Entscheidungsbäume eignen sich sowohl für das Regressions- als auch für das Klassifikationsproblem. Obwohl sie realen Projekten typischerweise anderen Modellen unterlegen sind, wenn es um die Vorhersagequalität geht, sind sie trotzdem attraktive Modelle, da sie gut visualisierbar sind.Kapitel 8: Aufbauend auf den Entscheidungsbäumen aus dem vorherigen Kapitel können sehr mächtige Modelle erstellt werden, die der Praxis oft die besten Vorhersagen liefern. Weil es sich dabei üblicherweise um eine clevere Aggregierung der Resultate einer grossen Anzahl individueller Entscheidungsbäume handelt, werden diese Modelle Ensembles genannt. Wie die individuellen Entscheidungsbäume eignen sich Ensembles sowohl für das Regressions- als auch für das Klassifikationsproblem.Kapitel 9: Ein weiteres mächtiges Modell, das sich sowohl für das Regressions- als auch für das Klassifikationsproblem eignet, sind die Support Vector Machines. Ihre Popularität ist mit dem Aufstieg von Deep Learning etwas verblasst. Es lohnt sich aber immer noch allemal, diese Familie von Modellen kennen zu lernen, insbesondere auch weil sie nicht als Blackbox-Modelle gelten und theoretisch gut fundiert sind.Kapitel 10: Ab diesem Kapitel steigen wir das Thema Deep Learning ein. Sie werden die Architektur von einfachen Articial Neural Networks (ANNs) kennen lernen. Ausserdem schauen wir uns diesem Kapitel den genialen Backpropagation Algorithmus anhand eines einfachen linearen Regressionsproblems . Dieser Algorithmus ist der Schlüssel für die viel diskutierten Fortschritte im Bereich der künstlichen Intelligenz, weil er das Trainieren von riesigen Modellen überhaupt erst möglich macht.Kapitel 11: Hier lernen wir sogenannte Convolutional Neural Networks (CNNs) kennen. Sie sind die Basis für die Fortschritte auf dem Gebiet Computer Vision und erlauben beispielsweise Anwendungen im Bereich automatische Gesichtserkennung Bildern oder Videos.Kapitel 12: Nach ANNs und CNNs lernen wir hier Recurrent Neural Networks (RNNs) kennen. Diese Modelle bilden die Basis für Probleme, denen die Daten als Sequenzen vorliegen. Das können einache Zeitreihen (z.B. Börsenkurse) sein, aber auch komplexere Sequenzdaten wie beispielsweise geschriebene oder gesprochene Sprache oder Tonaufnahmen.Kapitel 13: diesem letzten Kapitel geht es schliesslich um Generative KI. Wir beschäftigen uns hier also mit Modellen, die nicht nur einfach ein Vorhersageprobleme lösen können, sondern auch neue Inhalte (z.B. Texte, Musik, Bilder) generieren können. Nach dem Lesen dieses Kapitels sollten Sie ein grundlegendes Verständnis für die Funktionsweise von Modellen wie Chat-GPT haben.","code":""},{"path":"index.html","id":"weiterführende-literatur","chapter":"Über das Buch","heading":"Weiterführende Literatur","text":"Ein grosser Teil des vorliegenden Buchs baut auf bestehenden Büchern zum Thema Machine Learning auf. Ich werde im Buch immer wieder auf die Quellen verweisen. Die wichtigsten Referenzen für dieses Buch sind folgende:Gareth James, Daniela Witten, Trevor Hastie, Robert Tibshirani. (2021). Introduction Statistical Learning: Applications R. New York: Springer. 2nd Edition.Aurélien Géron. (2019). Hands-Machine Learning Scikit-Learn, Keras, TensorFlow: Concepts, Tools, Techniques Build Intelligent Systems. Sebastopol: O’Reilly Media Inc. 3rd Edition.Christopher M. Bishop. (2006). Pattern Recognition Machine Learning. Berlin, Heidelberg: Springer.Kevin P. Murphy. (2012). Machine Learning Probabilistic Perspective. MIT Press.Die ersten beiden Referenzen sind einführende Texte und können parallel zum vorliegenden Buch gelesen werden. Die letzten zwei Referenzen sind fortgeschrittene Texte und ich empfehle, sie erst nach dem vollständigen Verständnis des vorliegenden Buchs oder der ersten beiden Referenzen zu lesen.","code":""},{"path":"index.html","id":"lizenz","chapter":"Über das Buch","heading":"Lizenz","text":"Das vorliegende Buch ist unter Lizenz CC -NC-SA 4.0 DEED (Namensnennung, nicht-kommerziell, Weitergabe unter gleichen Bedingungen 4.0 International) lizenziert. Bitte halten Sie sich die Lizenzbedingungen.","code":""},{"path":"index.html","id":"kontakt","chapter":"Über das Buch","heading":"Kontakt","text":"Für Fragen und Anregungen zum Buch stehe ich gerne zur Verfügung:Martin Sterchi\nRiggenbachstrasse 16\n4600 Oltenmartin.sterchi@fhnw.ch","code":""},{"path":"intro.html","id":"intro","chapter":"1 Einführung","heading":"1 Einführung","text":"diesem Kapitel geht es darum zu verstehen, ML überhaupt ist, warum es nützlich sein kann und typische Anwendungsfälle von ML sind. Wir werden ausserdem die verschiedenen Arten von ML kennen lernen.","code":""},{"path":"intro.html","id":"was-ist-machine-learning","chapter":"1 Einführung","heading":"1.1 Was ist Machine Learning?","text":"Kurze Geschichte von MLWie der Name sagt, geht es im ML darum, dass eine Maschine (oder präziser, ein Computer) aus einem gegebenen Datensatz automatisch lernt, ohne dass ein Mensch dem Computer sagen muss, er lernen soll. Der Mensch gibt jedoch dem Computer die Rahmenbedingungen für das selbständige Lernen vor.Bevor wir etwas konkreter anschauen, wie genau ein Computer selbständig aus Daten lernen kann, schauen wir uns die Definitionen von zwei Experten im Gebiet ML :“[Machine Learning ] field study gives computers ability learn without explicitly programmed.” Arthur Samuel, 1959“Machine Learning science (art) programming computers can learn data.” Aurélien Géron1Zusammenfassend lässt sich sagen, dass wir mit ML dem Computer die Möglichkeit geben, automatisch und selbständig aus Daten zu lernen. Nichtsdestotrotz braucht es Sie als ML-Expert*, und zwar wie folgt:Sie entscheiden sich für ein spezifisches ML Modell. Typischerweise kann ein ML Modell durch eine mathematische Funktion (Kapitel 2) charakterisiert werden. ML Modelle können unterschiedlich flexibel sein und es liegt im Ermessen von Ihnen, wie flexibel das Modell sein soll. Grundsätzliche gilt bei der Wahl des Modells, dass flexiblere Modelle komplexere Sachverhalte abbilden können. Ein zu flexibles Modell kann aber zu Overfitting führen, aber dazu später mehr.Sobald Sie das Modell ausgewählt haben, übergeben Sie dem Computer das Modell, einen Datensatz sowie einen Lernalgorithmus. Nun hat der Computer alle Zutaten, um automatisch zu lernen, doch lernt er eigentlich? Der Computer lernt die Parameter Ihres gewählten Modells, dass das Modell sich optimal die Daten anpasst.Das erlernte Modell kann nun entweder verwendet werden, um …","code":""},{"path":"intro.html","id":"wann-macht-es-sinn-ml-einzusetzen","chapter":"1 Einführung","heading":"1.2 Wann macht es Sinn ML einzusetzen?","text":"Ein ML Modell zu trainieren kann viel Zeit und Geld kosten. Zum Beispiel müssen Sie unter Umständen überhaupt erst die Daten sammeln, um ein Modell zu erlernen. Oder das Projekt ist komplex, dass Sie als Analyst*unzählige Stunden benötigen, um die Daten überhaupt erst eine Form zu bringen, die es erlaubt ein Modell zu trainieren. Für neuartige DL Modelle oder Generative KI kann das Trainieren bzw. Lernen eines Modells durch den reinen Stromverbrauch bzw. die vom Cloud-Betreibeber Rechnung gestellten Kosten hoch sein, dass sich Ihr ursprüngliches Vorhaben nicht mehr lohnt. Es ist also ungemein wichtig, dass Sie sich vor Projektbeginn gut überlegen, ob ML für Ihr vorliegendes Problem überhaupt Sinn macht und einen Mehrwert generieren kann.Folgende Daumenregeln können Ihnen dabei helfen, zu entscheiden, ob ML für Ihr Projekt Sinn macht:Der manuelle Arbeitsaufwand ist sehr gross, wenn das Problem durch Menschen gelöst werden soll. Das Problem ist aber ansonsten klar strukturiert und benötigt keinen grossen kognitiven Einsatz eines Menschen. Beispiel: den Post-Verteilzentren werden die von Hand geschriebenen PLZ problemlos mittels Computer bzw. ML Modellen “gelesen” und die Briefe und Pakete entsprechend sortiert.Komplexe Probleme, denen ein Mensch keinen Überblick hat, weil viele Daten vorhanden sind (Bsp. Anscome Quartett).Wenn sich das Problem dynamisch verändert. ML erlaubt es uns, ein Modell effizient mit neuen Daten zu rechnen und das veränderte Problem anzupassen.…","code":""},{"path":"intro.html","id":"anwendungsfälle-von-ml","chapter":"1 Einführung","heading":"1.3 Anwendungsfälle von ML","text":"Stellen Sie sich vor, wir haben einen Datensatz mit 300 Spam Emails und 700 “Ham” Emails (kein Spam). Ohne Machine Learning müssten wir nun von Hand die 300 Spam Emails mit den 700 Ham Emails vergleichen und versuchen, Muster zu finden, die es uns erlauben Regeln aufzustellen, um die Spam Emails korrekt zu klassifizieren (z.B. Spam enthält tendenziell eher Geldbeträge oder Preise als Ham). Danach könnten wir die Regeln mit R implementieren. Dann stellt sich aber auch noch die Frage, wie die verschiedenen Regeln miteinander kombiniert werden, um eine Klassifikation zu machen. Dieses Vorgehen würde sehr viel zu tun geben und es würde gezwungenermassen zu willkürlichen Entscheidungen führen.Machine Learning führt zu ) weniger Aufwand und ii) besseren Lösungen, indem wir einem R-Skript ein Modell (z.B. logistische Regression) aufsetzen und dann dem Modell die Daten geeigneter Form füttern. Danach lernt der Computer selbständig, wie er die Emails bestmöglich Spam und Ham klassifiziert.ML Beispiele\n- Spam Filter\n- ChatGPT\n- Face Recognition Fotos","code":""},{"path":"intro.html","id":"supervised-vs.-unsupervised-learning","chapter":"1 Einführung","heading":"1.4 Supervised vs. Unsupervised Learning","text":"Beim Supervised Learning geht es um ML Probleme, denen sowohl Input-Daten als auch ein Output vorhanden ist. Für die Input-Daten gibt es ganz viele verschiedene Begriffe, die synonym verwendet werden: z.B. Features, unabhängige Variablen, Attribute, Prädiktoren. Dasselbe gilt für den Output, hier gibt es folgende Synonyme: Zielvariable, abhängige Variable, Label, oder auch einfach y.Mathe Notation einführen.Ziel ist es, ein Modell zu lernen, das basierend auf den Input-Daten möglichst gute Vorhersagen für den Output macht. Es geht also hier um Vorhersageprobleme. einem gewissen Sinn ist der Output der Supervisor, der den Lernprozess des Modells überwacht.Neben dem Supervised und dem Unsupervised Learning gibt es noch eine dritte erwähnenswerte ML Kategorie, nämlich Reinforcement Learning (RL). Dieser Kategorie gehören Modelle , die sogenannte (virtuelle) Agenten trainieren, dass sie langfristig möglichst optimal handeln. Das bekannteste Beispiel aus dem RL ist Googles AlphaGo Agent, welcher den menschlichen Go Weltmeister im Jahr 2017 schlug.","code":""},{"path":"intro.html","id":"regression-vs.-klassifikation","chapter":"1 Einführung","heading":"1.5 Regression vs. Klassifikation","text":"Im Bereich des Supervised Learnings unterscheiden wir zwischen Regressions- und Klassifikationsproblemen.Im Regressionsproblem ist der Output bzw. die Zielvariable eine stetige Variable (Intervall- oder Verhältnisskalierung), d.h. die Variable enthält numerische Werte.Im Klassifikationsproblem ist der Output bzw. die Zielvariable eine kategorische Variable (Nominal- oder Ordinalskalierung).","code":""},{"path":"intro.html","id":"parametrische-vs.-nicht-parametrische-modelle","chapter":"1 Einführung","heading":"1.6 Parametrische vs. nicht-parametrische Modelle","text":"K-Nearest Neighbor als erstes (nicht-parametrisches) Beispiel\nHier erste kleine App","code":""},{"path":"intro.html","id":"machine-learning-pipeline","chapter":"1 Einführung","heading":"1.7 Machine Learning Pipeline","text":"Pipeline zeigen","code":""},{"path":"basics.html","id":"basics","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2 Mathematik- und Statistik-Grundlagen","text":"diesem Kapitel repetieren wir die wichtigsten Grundlagen aus der Mathematik und Statistik, die es braucht, um Machine Learning Modelle zu verstehen. Das Thema Lineare Algebra wird für die meisten von Ihnen wahrscheinlich Neuland sein.","code":""},{"path":"basics.html","id":"funktionen","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.1 Funktionen","text":"Eine Funktion, die wir der Mathematik typischerweise mit \\(f\\) bezeichnen, ordnet jedem Argument \\(x\\) aus dem Definitionsbereich \\(D\\) (engl. Domain) genau einen Wert \\(y\\) aus dem Wertebereich \\(W\\) (engl. Codomain) zu. Oft sind \\(D\\) und \\(W\\) die Menge der reellen Zahlen, also \\(\\mathbb{R}\\). Die Menge der reellen Zahlen enthält alle möglichen Zahlen, die Sie sich vorstellen können.2 Zum Beispiel die Zahlen \\(3\\), \\(-4.247\\), \\(\\sqrt{14}\\), \\(5/8\\), etc.Wie eine Funktion grafisch aussieht, ist aus Panel () der Abbildung 2.1 ersichtlich. Hier zeigen wir die Form einer Funktion einem kartesischen Koordinatensystem. Die Funktionskurve weist jedem Wert \\(x\\) auf der x-Achse genau einen Wert \\(y\\) auf der y-Achse zu. Der wichtigste Teil der oben aufgeführten Definition ist der Teil “genau einen Wert”, denn eine Funktion kann einem Element \\(x\\) nicht zwei oder mehr Werte zuweisen, sondern nur genau einen. Genau aus diesem Grund handelt es sich bei Panel (b) Abbildung 2.1 nicht um eine Funktion, da gewissen \\(x\\)-Werten mehrere Werte \\(y\\) zugeordnet werden. Wichtig: das heisst aber nicht, dass zwei verschiedenen \\(x\\)-Werten, nennen wir sie \\(x'\\) und \\(x''\\), derselbe \\(y\\)-Wert zugeordnet werden kann (vgl. Panel ()).\nAbbildung 2.1: () Eine Funktion, die jedem x-Wert genau einen y-Wert zuweist. (b) Keine Funktion.\nMathematisch wird diese allgemeine Definition einer Funktion häufig wie folgt beschrieben:\\[\nf : x \\mapsto y\n\\]\nWir haben also eine Funktion \\(f\\), die jedem Element \\(x\\) genau einen Wert \\(y\\) zuweist. Der Pfeil obiger mathematischer Schreibweise beschreibt genau dieses Mapping. Wie genau dieses Mapping einem Argument \\(x\\) den entsprechenden \\(y\\)-Wert zuordnet, wird durch die Funktion \\(f(x)\\) beschrieben. den folgenden Abschnitten schauen wir uns typische Beispiele von Funktionen , angefangen mit linearen Funktionen. Doch vorher wollen wir uns kurz überlegen, warum Funktionen für das Machine Learning überhaupt wichtig sind. Ein grosser Teil des Machine Learnings, der Supervised Learning genannt wird, befasst sich mit dem Problem, wie eine Zielvariable \\(y\\) mithilfe von einem oder mehreren Prädiktoren \\(x\\) vorhergesagt werden kann. Ein Machine Learning Modell ist darum nichts anderes als eine Funktion \\(y=f(x)\\), die basierend auf den Prädiktoren \\(x\\) die Zielvariable \\(y\\) möglichst gut beschreiben kann.3","code":""},{"path":"basics.html","id":"lineare-funktionen","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.1.1 Lineare Funktionen","text":"Nun schauen wir uns , wie eine lineare Funktion aussieht. Eine lineare Funktion kann allgemein wie folgt geschrieben werden:\\[\ny = f(x) = \\cdot x + b\n\\]\nObige Funktionsgleichung besagt, dass wir den entsprechenden \\(y\\)-Wert kriegen, indem wir den Wert des Arguments \\(x\\) mit \\(\\) multiplizieren und danach eine Konstante \\(b\\) addieren. \\(\\) und \\(b\\) sind die Parameter dieser Funktion. Die konkreten Zahlenwerte dieser beiden Parameter definieren, wie die Funktion Schluss genau aussieht.Eine lineare Funktion hat auch eine geometrische Interpretation und zwar entspricht eine lineare Funktion einer Gerade. Das ist auch der Grund, warum wir diese Funktionen linear nennen, sie können graphisch durch eine “Linie” dargestellt werden. Der Parameter \\(\\) ist die Steigung dieser Geraden und der Parameter \\(b\\) entspricht dem Ort, wo die Gerade die y-Achse schneidet (sogenannter y-Achsenabschnitt).besten schauen wir uns ein paar konkrete Beispiele (Abb. 2.2).\nAbbildung 2.2: Beispiele linearer Funktionen.\nAus der linken Abbildung können wir ablesen, dass die Steigung dieser Geraden \\(\\frac{\\Delta y}{\\Delta x}=\\frac{2}{2}=1\\) ist und dass die Gerade die y-Achse Ort \\(1\\) schneidet. Die entsprechende lineare Funktion kann dementsprechend als \\(y = x + 1\\) geschrieben werden.4Aus der rechten Abbildung können wir ablesen, dass die Steigung \\(\\frac{\\Delta y}{\\Delta x}=\\frac{-1}{2}=-0.5\\) ist und dass die Gerade die y-Achse Ort \\(-2\\) schneidet. Die entsprechende lineare Funktion kann dementsprechend als \\(y = -0.5\\cdot x -2\\) geschrieben werden.Es ist wichtig zu sehen, dass der Effekt einer Veränderung von \\(x\\) (also \\(\\Delta x\\)) auf \\(y\\) überall derselbe ist. Es spielt also keine Rolle, ob wir von \\(x=-2\\) zu \\(x=-1\\) gehen oder von \\(x=100\\) zu \\(x=101\\), die entsprechende Veränderung \\(y\\) (also \\(\\Delta y\\)) wird dieselbe sein. Das muss sein, denn die Gerade steigt (oder sinkt) mit konstanter Steigung.AufgabenZeichnen Sie die Funktion \\(y = 2\\cdot x\\) ein Koordinatensystem ein. Warum fehlt der Parameter \\(b\\)?Zeichnen Sie die Funktion \\(y=-3\\) ein Koordinatensystem ein. Ist das überhaupt eine Funktion nach obiger Definition?","code":""},{"path":"basics.html","id":"quadratische-funktionen","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.1.2 Quadratische Funktionen","text":"Nun wollen wir uns eine etwas interessantere (und flexiblere) Familie von Funktionen anschauen, nämlich quadratische Funktionen. Auch hier wollen wir die Funktion erstmal allgemein aufschreiben:\\[\ny = f(x) = \\cdot x^2 + b \\cdot x + c\n\\]\nEine quadratische Funktion hat drei Parameter, nämlich \\(\\), \\(b\\) und \\(c\\). Grafisch entspricht die quadratische Funktion einer Parabel (vgl. Abb. 2.3). Die Parameter sind hier nicht mehr einfach grafisch zu interpretieren, aber die vier Beispiele unten stehender Abbildung geben Anhaltspunkte, passiert, wenn die Parameterwerte sich ändern.\nAbbildung 2.3: Beispiele quadratischer Funktionen.\nAufgabenSie haben folgende quadratische Gleichung: \\(y = 2 \\cdot x^2 + x - 2\\). Berechnen Sie mit der bekannten Lösungsformel \\(x_{1,2}=\\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\\) die Orte auf der x-Achse, wo die Parabel die Achse schneidet (oder einfacher gesagt die Nullstellen).Verwenden Sie folgenden R-Code, um beliebige quadratische Funktionen grafisch darzustellen, indem Sie die Parameterwerte auf der ersten Code-Zeile verändern.Sie wundern sich nun vielleicht, könnte man nicht auch eine Funktion antreffen, der \\(x^3\\), \\(x^4\\), etc. vorkommen? Das ist selbstverständlich möglich. diesem Fall spricht man dann von einem sogenannten Polynom. Die höchste Potenz des Arguments \\(x\\) definiert den Grad des Polynoms.Schauen wir uns doch besten gleich wieder ein Beispiel :\\[\ny = f(x) = 1 \\cdot x^4 - 2 \\cdot x^3 - 5 \\cdot x^2 + 8 \\cdot x - 2\n\\]\nDie Visualisierung dieser Funktion ist Abb. 2.4 gegeben. Diese Funktion ist nun bereits enorm flexibel und kann je nach Parameterwerten ganz unterschiedliche Zusammenhänge abbilden.\nAbbildung 2.4: Beispiel einer polynomischen Funktion vierten Grades.\nAufgabenEine quadratische Funktion ist ein Polynom welchen Grades?Handelt es sich bei der Funktion \\(y=2x^5 + x + 1\\) immer noch um ein Polynom? Falls ja, ein Polynom welchen Grades?Handelt es sich bei der Funktion \\(y = x^{0.5} + 2\\) um ein Polynom?","code":"\n# Parameter setzen\na <- 2; b <- 0; c <- 1\n# Quadratische Funktion\nquad <- function(x, a, b, c) {a * x^2 + b * x + c}\n# x-Werte\nx <- seq(-6, 6, 0.01)\n# y-Werte\ny <- quad(x, a, b, c)\n# Plot\nplot(x, y, type = \"l\", lwd = 2, col = \"darkcyan\")"},{"path":"basics.html","id":"funktionen-mehrerer-argumente","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.1.3 Funktionen mehrerer Argumente","text":"Bisher haben wir nur Funktionen mit einem Argument \\(x\\) angeschaut, doch die meisten für das Machine Learning interessanten Funktionen sind Funktionen mehrerer Argumente.Der Einfachheit halber schauen wir uns hier nur mal eine lineare Funktion zweier Argumente, nennen wir sie \\(x_1\\) und \\(x_2\\), , denn diese können wir 3D immer noch visualisieren. Wir betrachten folgende Funktion: \\(y = f(x_1,x_2) = 1 \\cdot x_1 + 0.5 \\cdot x_2 + 5\\).\nAbbildung 2.5: Lineare Funktion zweier Argumente (Ebene).\nAha! Während eine lineare Funktion eines Arguments grafisch einer Gerade entspricht, sehen wir nun, dass eine lineare Funktion zweier Argumente nichts anderes als eine Ebene darstellt. Wir sehen, dass die Ebene die y-Achse Punkt \\(5\\) schneidet. Etwas schwieriger zu sehen ist die Steigung der Ebene die Richtung der \\(x_1\\)-Achse und die Richtung der \\(x_2\\)-Achse. Sie können aber vielleicht bereits erraten, dass die (partiellen) Steigungen \\(1\\) und \\(0.5\\) betragen.Die Funktion ordnet jeden möglichen Punkt \\((x_1,x_2)\\) einem Punkt auf der Ebene zu. Wir können zum Beispiel für den Abb. 2.5 eingezeichneten Punkt \\((6,4)\\) den entsprechenden Punkt auf der Ebene ausrechnen:\\[ \\begin{split}\ny &= 1 \\cdot x_1 + 0.5 \\cdot x_2 + 5\\\\\n&= 1 \\cdot 6 + 0.5 \\cdot 4 + 5\\\\\n&= 13\n\\end{split}\\]Selbstverständlich könnten wir uns nun auch quadratische Funktionen oder Polynome mehrerer Argumente anschauen, aber darauf verzichten wir vorerst.","code":""},{"path":"basics.html","id":"potenzen-und-logarithmen","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.1.4 Potenzen und Logarithmen","text":"Blabla…","code":""},{"path":"basics.html","id":"integral--und-differentialrechnung","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.2 Integral- und Differentialrechnung","text":"Olteanu materials:\nLocal vs. global minima\nmaximization minimization problem\nBasic definition derivative\nDifferentiation rules\nlocal min., max. saddle point\nSecond derivative test\nPartial derivatives\ngradient? Hessian? Jacobian?\nChain rules\nLagrange optimization","code":""},{"path":"basics.html","id":"lineare-algebra","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.3 Lineare Algebra","text":"Olteanu materials:\nscalar? vector? matrix?\nVector norms\nInner products\nSymmetric, diagonal, square identity matrix\nAssociative, commutative laws matrices\nMatrix addition multiplication\nMatrix inversion\nEigenvectors eigenvalues\nQuadratic form positive (semi-) definiteness\nDifferentiation rules matrices","code":""},{"path":"basics.html","id":"wahrscheinlichkeitsrechnung","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.4 Wahrscheinlichkeitsrechnung","text":"Olteanu materials:\nSample space axioms probability\nConditional probability definition\nDiscrete vs. continuous random variables\nJoint probability distributions\nExpectation variance, covariance (always discrete continuous)\nBernoulli, Binomial, Normal, Multivariate Normal, Laplace","code":""},{"path":"basics.html","id":"diskrete-zufallsvariablen","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.4.1 Diskrete Zufallsvariablen","text":"Wir werden später sehen, dass im Machine Learning oftmals Dinge als Zufallsvariablen modelliert werden. Eine Zufallsvariable \\(X\\) ist eine Variable, für die der konkrete Wert nicht von vornherein klar ist. Wir können mit \\(X\\) zum Beispiel das Resultat eines Münzwurfs modellieren. Die zwei möglichen Resultate sind Kopf und Zahl. Vor dem Münzwurf ist nicht klar, ob Kopf oder Zahl erscheinen wird. Genau darum modellieren wir das Resultat des Münzwurfs als Zufallsvariable.Es gibt diesem einfachen Beispiel nur zwei mögliche Resultate (Kopf und Zahl), d.h. die Anzahl möglicher Resultate ist endlich (= nicht unendlich). Darum handelt es sich diesem Fall um eine diskrete Zufallsvariable.","code":""},{"path":"basics.html","id":"verteilungen","chapter":"2 Mathematik- und Statistik-Grundlagen","heading":"2.5 Verteilungen","text":"","code":""},{"path":"intro-R.html","id":"intro-R","chapter":"3 Einführung in das Programmieren mit R","heading":"3 Einführung in das Programmieren mit R","text":"leaRn MaterialentidymodelsReferenzen auf andere Ressourcen (Hadley et al.)","code":""},{"path":"lin-reg.html","id":"lin-reg","chapter":"4 Lineare Regression","heading":"4 Lineare Regression","text":"","code":""},{"path":"lin-class.html","id":"lin-class","chapter":"5 Lineare Klassifikation","heading":"5 Lineare Klassifikation","text":"","code":""},{"path":"ml-pipeline.html","id":"ml-pipeline","chapter":"6 Machine Learning Pipeline","heading":"6 Machine Learning Pipeline","text":"","code":""},{"path":"trees.html","id":"trees","chapter":"7 Decision Trees","heading":"7 Decision Trees","text":"","code":""},{"path":"ensembles.html","id":"ensembles","chapter":"8 Ensembles","heading":"8 Ensembles","text":"","code":""},{"path":"svm.html","id":"svm","chapter":"9 Support Vector Machines","heading":"9 Support Vector Machines","text":"","code":""},{"path":"ann.html","id":"ann","chapter":"10 Artificial Neural Networks","heading":"10 Artificial Neural Networks","text":"","code":""},{"path":"cnn.html","id":"cnn","chapter":"11 Convolutional Neural Networks","heading":"11 Convolutional Neural Networks","text":"","code":""},{"path":"rnn.html","id":"rnn","chapter":"12 Recurrent Neural Networks","heading":"12 Recurrent Neural Networks","text":"","code":""},{"path":"gen-AI.html","id":"gen-AI","chapter":"13 Generative AI","heading":"13 Generative AI","text":"","code":""},{"path":"bibliographie.html","id":"bibliographie","chapter":"Bibliographie","heading":"Bibliographie","text":"","code":""}]
